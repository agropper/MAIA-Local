version: '3.8'

services:
  # Cloudant is used for data storage (no local CouchDB needed)
  # MAIA connects directly to Cloudant via environment variables

  # MAIA Vue AI Example (Secure Local Development)
  maia-vue-ai-secure:
    build:
      context: ./MAIA-vue-ai-example
      dockerfile: Dockerfile.secure
    container_name: hieofone_maia_vue_ai_secure
    restart: always
    depends_on:
      - couchdb
    env_file:
      - ./MAIA-vue-ai-example/.env
    environment:
      - NODE_ENV=development
      - PORT=3001
      - LOCAL_TESTING=true
      - SINGLE_PATIENT_MODE=true
      - PATIENT_ID=demo_patient_001
      - COUCHDB_USER=maia_admin
      - COUCHDB_PASSWORD=MaiaSecure2024!
    ports:
      - "127.0.0.1:3001:3001"  # Bind to localhost only
    volumes:
      # Mount source code for development (optional)
      - ./MAIA-vue-ai-example/src:/app/src:ro
      # Mount logs
      - ./logs:/app/logs
    networks:
      - hieofone_network
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
      - /var/tmp

  # Optional: NOSH3 for healthcare data integration (requires separate CouchDB setup)
  # nosh3:
  #   build:
  #     context: ./nosh3
  #     dockerfile: Dockerfile.simple
  #   container_name: hieofone_nosh3_maia
  #   restart: always
  #   env_file:
  #     - ./nosh3/.env
  #   environment:
  #     - NODE_ENV=development
  #     - LOCAL_TESTING=true
  #     - LOCAL_TEST_PASSWORD=test123
  #     - AUTH=simple
  #   ports:
  #     - "4000:4000"
  #   networks:
  #     - hieofone_network

  # Optional: Trustee-Community for authentication (requires separate CouchDB setup)
  # trustee-community:
  #   build:
  #     context: ./Trustee-Community
  #     dockerfile: Dockerfile.simple
  #   container_name: hieofone_trustee_community_maia
  #   restart: always
  #   env_file:
  #     - ./Trustee-Community/.env
  #   environment:
  #     - NODE_ENV=development
  #     - LOCAL_TESTING=true
  #     - LOCAL_TEST_PASSWORD=test123
  #     - BYPASS_EMAIL_VERIFICATION=true
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - hieofone_network

networks:
  hieofone_network:
    driver: bridge

volumes:
  logs: 